name: CI/CD Pipeline

on:
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ secrets.PORT || 3000 }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
          registry-url: "https://npm.pkg.github.com/"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Generate Prisma Client
        run: npm run db:generate

      - name: 🗄️ Push Prisma schema to Neon
        run: npm run db:push

      - name: 💾 Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0

      - name: 🔍 Run Linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: build
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ secrets.PORT || 3000 }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0

      - name: 🧪 Run Unit Tests
        run: npm run test:unit

      - name: 🔗 Run Integration Tests
        run: npm run test:integration

      - name: 🌐 Run E2E Tests
        run: npm run test:e2e

  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
          registry-url: "https://npm.pkg.github.com/"

      - name: 🚀 Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
